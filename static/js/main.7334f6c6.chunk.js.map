{"version":3,"sources":["assets/CodyPortfolio.png","components/AboutMe/AboutMe.js","components/Nav/Nav.js","components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AboutMe","fluid","className","md","src","Cody","alt","Nav","props","state","collapse","onClick","bind","this","setState","style","backgroundColor","dark","expand","scrolling","fixed","href","isOpen","navbar","right","to","React","Component","Home","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,2C,6UC2F5BC,EAvFC,WACZ,OACI,oCACI,kBAAC,IAAD,CAAcC,OAAK,GACf,kBAAC,IAAD,CAAQC,UAAU,mBACd,kBAAC,IAAD,CAAQC,GAAG,IAAID,UAAU,IACrB,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,eAAd,SACA,wBAAIA,UAAU,gBAAd,cACA,wBAAIA,UAAU,cAAd,IAA6B,MAEjC,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,uBAAd,eACA,wBAAIA,UAAU,kBAAd,OACA,wBAAIA,UAAU,eAAd,IAA8B,MAElC,yBAAKA,UAAU,uCACX,wBAAIA,UAAU,eAAd,QACA,wBAAIA,UAAU,mBAAd,iBACA,wBAAIA,UAAU,eAAd,QAGR,kBAAC,IAAD,CAAQC,GAAG,IAAID,UAAU,IACrB,yBAAKA,UAAU,yCACX,wBAAIA,UAAU,eAAd,6BACA,wBAAIA,UAAU,eAAd,MAEJ,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,cAAd,6BACA,wBAAIA,UAAU,eAAd,MAEJ,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,cAAd,6BACA,wBAAIA,UAAU,eAAd,MAEJ,6BACI,+BAMJ,kBAAC,IAAD,CAAQC,GAAG,IAAID,UAAU,IACrB,yBAAKA,UAAU,IACX,yBAAKA,UAAU,IACX,yBAAKE,IAAKC,IAAMH,UAAW,YAAaI,IAAI,oCCOjEC,E,kDAjDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAEd,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBALA,E,sDASfC,KAAKC,SAAS,CACVJ,UAAWG,KAAKJ,MAAMC,a,+BAU1B,OACQ,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAWK,MAJR,CAAEC,gBAAiB,WAIIC,MAAI,EAACC,OAAO,KAAKC,WAAS,EAACC,MAAM,OACvD,kBAAC,IAAD,CAAgBC,KAAK,IAAInB,UAAU,cAC/B,6CAEJ,kBAAC,IAAD,CAAkBS,QAASE,KAAKF,UAChC,kBAAC,IAAD,CAAaW,OAAQT,KAAKJ,MAAMC,SAAUa,QAAM,GAC5C,kBAAC,IAAD,CAAcC,OAAK,EAACtB,UAAU,aAC1B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYuB,GAAG,IAAIvB,UAAU,QAA7B,cAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYuB,GAAG,IAAIvB,UAAU,QAA7B,UAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYuB,GAAG,IAAIvB,UAAU,QAA7B,oB,GAtClBwB,IAAMC,WCqBTC,G,MAjBF,WACT,OACI,oCACI,kBAAC,EAAD,MACA,kBAAC,EAAD,SCgBGC,MAlBf,WACE,OACE,oCAUA,kBAAC,EAAD,QCZgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7334f6c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CodyPortfolio.92925925.png\";","import React from 'react';\r\nimport { MDBBtn, MDBCard, MDBRow, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBContainer } from 'mdbreact';\r\nimport \"../AboutMe/AboutMe.css\";\r\nimport Cody from \"../../assets/CodyPortfolio.png\";\r\nconst AboutMe = () => {\r\n    return (\r\n        <>\r\n            <MDBContainer fluid>\r\n                <MDBRow className=\" test mt-5 pt-5\">\r\n                    <MDBCol md=\"4\" className=\"\">\r\n                        <div className=\"d-flex flex-row\">\r\n                            <h4 className=\"popularTeal\">class</h4>\r\n                            <h4 className=\"popularGreen\">CodyHoover</h4>\r\n                            <h4 className=\"curlyClass\"> {\"{\"}</h4>\r\n                        </div>\r\n                        <div className=\"d-flex flex-row\">\r\n                            <h4 className=\"functionBrackets ti\">constructor</h4>\r\n                            <h4 className=\"purpleBrackets\"> ()</h4>\r\n                            <h4 className=\"purpleCurly\"> {\"{\"}</h4>\r\n                        </div>\r\n                        <div className=\"d-flex flex-row justify-content-end\">\r\n                            <h4 className=\"popularTeal\">this</h4>\r\n                            <h4 className=\"objpropKey mr-4\">.bootcampMERN</h4>\r\n                            <h4 className=\"equalsWhite\"> =</h4>\r\n                        </div>\r\n                    </MDBCol>\r\n                    <MDBCol md=\"4\" className=\"\">\r\n                        <div className=\"d-flex flex-row justify-content-start\">\r\n                            <h4 className=\"objpropVal \">`Completion Date 8/21/20`</h4>\r\n                            <h4 className=\"equalsWhite\">;</h4>\r\n                        </div>\r\n                        <div className=\"d-flex flex-row\">\r\n                            <h4 className=\"objpropVal\">`Completion Date 8/21/20`</h4>\r\n                            <h4 className=\"equalsWhite\">;</h4>\r\n                        </div>\r\n                        <div className=\"d-flex flex-row\">\r\n                            <h4 className=\"objpropVal\">`Completion Date 8/21/20`</h4>\r\n                            <h4 className=\"equalsWhite\">;</h4>\r\n                        </div>\r\n                        <div>\r\n                            <h4></h4>\r\n                        </div>\r\n\r\n\r\n                        \r\n                    </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"\">\r\n                            <div className=\"\">\r\n                                <div className=\"\">\r\n                                    <img src={Cody} className={\"img-fluid\"} alt=\"head shot of Cody Hoover\" />\r\n                                </div>\r\n                            </div>\r\n                        </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n\r\n\r\n                {/* <h4>\r\n                                        <span className=\"popularTeal\">class</span>\r\n                                        <span className=\"popularGreen\"> CodyHoover</span>\r\n                                        <span className=\"curlyClass\"> {\"{\"}</span>\r\n                                    </h4>\r\n   \r\n                                    <h4 className=\"ti\">\r\n                                        <span className=\"functionBrackets\">constructor</span>\r\n                                        <span className=\"purpleBrackets\"> ()</span>\r\n                                        <span className=\"purpleCurly\"> {\"{\"}</span>\r\n                                    </h4>\r\n\r\n\r\n                                        <div  className=\"popularTeal\">this</div>\r\n                                        <div  className=\"objpropKey\">.bootcampMERN</div>\r\n                                        <div  className=\"equalsWhite\"> =</div>\r\n  \r\n                                    <h4>\r\n                                        <span className=\"objpropVal\">`Completion Date 8/21/20`</span>\r\n                                        <span className=\"equalsWhite\">;</span>\r\n                                    </h4>\r\n                        \r\n    \r\n                        <div class=\"col\">\r\n                            <img src={Cody} className={\"img-fluid\"} alt=\"head shot of Cody Hoover\" />\r\n                        </div> */}\r\n\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default AboutMe;","import React from 'react';\r\nimport { MDBContainer, MDBRow, MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBIcon, MDBCol } from 'mdbreact';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport \"../Nav/Nav.css\"\r\nimport AboutMe from \"../AboutMe/AboutMe\";\r\n\r\nclass Nav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collapse: false,\r\n        };\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n\r\n    onClick() {\r\n        this.setState({\r\n            collapse: !this.state.collapse,\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        const container = { height: \"1300\" }\r\n        const bgLightBlue = {};\r\n        const bgBlue = { backgroundColor: '#1565C0' }\r\n        return (\r\n                <Router>\r\n\r\n                    <MDBNavbar style={bgBlue} dark expand=\"md\" scrolling fixed=\"top\">\r\n                        <MDBNavbarBrand href=\"/\" className=\"codyMargin\">\r\n                            <p>CODY J HOOVER</p>\r\n                        </MDBNavbarBrand>\r\n                        <MDBNavbarToggler onClick={this.onClick} />\r\n                        <MDBCollapse isOpen={this.state.collapse} navbar>\r\n                            <MDBNavbarNav right className=\"linkgroup\">\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink to=\"#\" className=\"link\">PORTFOLIO</MDBNavLink>\r\n                                </MDBNavItem>\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink to=\"#\" className=\"link\">ABOUT</MDBNavLink>\r\n                                </MDBNavItem>\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink to=\"#\" className=\"link\">CONTACT</MDBNavLink>\r\n                                </MDBNavItem>\r\n                            </MDBNavbarNav>\r\n                        </MDBCollapse>\r\n                    </MDBNavbar>\r\n                </Router>\r\n            \r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;","// import React from \"react\";\r\nimport Nav from \"../Nav/Nav\";\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport \"../Home/Home.css\";\r\nimport AboutMe from \"../AboutMe/AboutMe\";\r\n\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport { MDBBtn } from \"mdbreact\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <Nav />\r\n            <AboutMe />\r\n        </>\r\n\r\n\r\n\r\n\r\n\r\n            \r\n\r\n      \r\n    )\r\n};\r\n\r\nexport default Home;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\nimport Home from \"./components/Home/Home\";\nimport Portfolio from \"./components/Portfolio/Portfolio\";\n// import { Container} from 'mdbreact';\n// import GridExamplesPage from \"../src/components/GridExamplesPage/GridExamplesPage\";\n\nfunction App() {\n  return (\n    <>\n      {/* <GridExamplesPage /> */}\n\n      {/* <Router>\n        <Switch>\n          <Route exact path=\"/portfolio_mdbreact\" component={Home} />\n          <Route path=\"/Portfolio\" component={Portfolio} />\n        </Switch>\n        \n      </Router> */}\n    <Home />\n\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; import\n'bootstrap-css-only/css/bootstrap.min.css'; import\n'mdbreact/dist/css/mdb.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}